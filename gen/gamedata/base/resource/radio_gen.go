// Code generated by gen-data-base. DO NOT EDIT.

package resource

import (
	"os"
	"path/filepath"

	"github.com/go-pantheon/fabrica-util/errors"
	jsoniter "github.com/json-iterator/go"
)

// RadioDataBaseGens excel/Resource/item.xlsx:Radio
type RadioDataBaseGens struct {
	DataBases []*RadioDataBaseGen
}

// RadioDataBaseGen excel/Resource/item.xlsx:Radio
type RadioDataBaseGen struct {
	ID           int64              // Random Group
	GroupItems   []map[int64]uint64 // Item DataId
	GroupWeights []uint64           // Random Weight
}

func (d *RadioDataBaseGens) Table() string {
	return "excel/Resource/item.xlsx:Radio"
}

func (d *RadioDataBaseGen) Table() string {
	return "excel/Resource/item.xlsx:Radio"
}

func LoadRadioDataBaseGens(filename string) *RadioDataBaseGens {
	filename = filepath.FromSlash(filename)

	json, err := os.ReadFile(filename)
	if err != nil {
		panic(errors.Wrapf(err, "Load json failed. file=%s", filename))
	}

	baseList := []RadioDataBaseGen{}
	err = jsoniter.Unmarshal(json, &baseList)
	if err != nil {
		panic(errors.Wrapf(err, "Unmarshal json failed. file=%s", filename))
	}

	datas := &RadioDataBaseGens{}

	for _, base := range baseList {
		datas.DataBases = append(datas.DataBases, &base)
	}

	return datas
}

func (d *RadioDataBaseGen) Id() int64 {
	return d.ID
}
