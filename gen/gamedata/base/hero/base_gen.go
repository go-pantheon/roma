// Code generated by gen-gamedata. DO NOT EDIT.

package hero

import (
	"os"
	"path/filepath"

	jsoniter "github.com/json-iterator/go"
	"github.com/pkg/errors"
)

// BaseDataBaseGens excel/Hero/hero.xlsx:Base
type BaseDataBaseGens struct {
	DataBases []*BaseDataBaseGen
}

// BaseDataBaseGen excel/Hero/hero.xlsx:Base
type BaseDataBaseGen struct {
	ID         int64            // Hero ID
	Name       string           // Hero Name
	Level      int64            // Type
	Skill      []int64          // Value
	QualityInt uint64           // Quality
	Cost       map[int64]uint64 // Pieces To Unlock Hero
}

func (d *BaseDataBaseGens) Table() string {
	return "excel/Hero/hero.xlsx:Base"
}

func (d *BaseDataBaseGen) Table() string {
	return "excel/Hero/hero.xlsx:Base"
}

func LoadBaseDataBaseGens(filename string) *BaseDataBaseGens {
	filename = filepath.FromSlash(filename)

	json, err := os.ReadFile(filename)
	if err != nil {
		panic(errors.Wrapf(err, "Load json failed. file=%s", filename))
	}

	baseList := []BaseDataBaseGen{}
	err = jsoniter.Unmarshal(json, &baseList)
	if err != nil {
		panic(errors.Wrapf(err, "Unmarshal json failed. file=%s", filename))
	}

	datas := &BaseDataBaseGens{}

	for _, base := range baseList {
		datas.DataBases = append(datas.DataBases, &base)
	}

	return datas
}

func (d *BaseDataBaseGen) Id() int64 {
	return d.ID
}
