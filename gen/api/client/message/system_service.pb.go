// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: message/system_service.proto

package climsg

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SCHeartbeat_Code int32

const (
	SCHeartbeat_ErrServer SCHeartbeat_Code = 0 // Please try again later
	SCHeartbeat_Succeeded SCHeartbeat_Code = 1 // Succeeded
	SCHeartbeat_ErrTime   SCHeartbeat_Code = 2 // Timestamp error
)

// Enum value maps for SCHeartbeat_Code.
var (
	SCHeartbeat_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Succeeded",
		2: "ErrTime",
	}
	SCHeartbeat_Code_value = map[string]int32{
		"ErrServer": 0,
		"Succeeded": 1,
		"ErrTime":   2,
	}
)

func (x SCHeartbeat_Code) Enum() *SCHeartbeat_Code {
	p := new(SCHeartbeat_Code)
	*p = x
	return p
}

func (x SCHeartbeat_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCHeartbeat_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_system_service_proto_enumTypes[0].Descriptor()
}

func (SCHeartbeat_Code) Type() protoreflect.EnumType {
	return &file_message_system_service_proto_enumTypes[0]
}

func (x SCHeartbeat_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCHeartbeat_Code.Descriptor instead.
func (SCHeartbeat_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_system_service_proto_rawDescGZIP(), []int{3, 0}
}

type SCServerLogout_Code int32

const (
	SCServerLogout_Server           SCServerLogout_Code = 0 // Unknown reason
	SCServerLogout_Waiting          SCServerLogout_Code = 1 // Please try again later
	SCServerLogout_Unauthorized     SCServerLogout_Code = 2 // Unauthorized
	SCServerLogout_ConflictingLogin SCServerLogout_Code = 3 // The same user is logged in on another device
	SCServerLogout_AdminKickOut     SCServerLogout_Code = 4 // Kicked out by admin
	SCServerLogout_Banned           SCServerLogout_Code = 5 // Account banned
)

// Enum value maps for SCServerLogout_Code.
var (
	SCServerLogout_Code_name = map[int32]string{
		0: "Server",
		1: "Waiting",
		2: "Unauthorized",
		3: "ConflictingLogin",
		4: "AdminKickOut",
		5: "Banned",
	}
	SCServerLogout_Code_value = map[string]int32{
		"Server":           0,
		"Waiting":          1,
		"Unauthorized":     2,
		"ConflictingLogin": 3,
		"AdminKickOut":     4,
		"Banned":           5,
	}
)

func (x SCServerLogout_Code) Enum() *SCServerLogout_Code {
	p := new(SCServerLogout_Code)
	*p = x
	return p
}

func (x SCServerLogout_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCServerLogout_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_system_service_proto_enumTypes[1].Descriptor()
}

func (SCServerLogout_Code) Type() protoreflect.EnumType {
	return &file_message_system_service_proto_enumTypes[1]
}

func (x SCServerLogout_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCServerLogout_Code.Descriptor instead.
func (SCServerLogout_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_system_service_proto_rawDescGZIP(), []int{5, 0}
}

// Handshake request
type CSHandshake struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                        // Token received from account/v1/login
	ServerId      int64                  `protobuf:"varint,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"` // Server ID
	Pub           []byte                 `protobuf:"bytes,3,opt,name=pub,proto3" json:"pub,omitempty"`                            // Client ECDH public key
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSHandshake) Reset() {
	*x = CSHandshake{}
	mi := &file_message_system_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSHandshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSHandshake) ProtoMessage() {}

func (x *CSHandshake) ProtoReflect() protoreflect.Message {
	mi := &file_message_system_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSHandshake.ProtoReflect.Descriptor instead.
func (*CSHandshake) Descriptor() ([]byte, []int) {
	return file_message_system_service_proto_rawDescGZIP(), []int{0}
}

func (x *CSHandshake) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CSHandshake) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *CSHandshake) GetPub() []byte {
	if x != nil {
		return x.Pub
	}
	return nil
}

// Handshake response
type SCHandshake struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartIndex    int32                  `protobuf:"varint,1,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"` // The index number of the next message to send
	Pub           []byte                 `protobuf:"bytes,2,opt,name=pub,proto3" json:"pub,omitempty"`                                  // Server ECDH public key
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCHandshake) Reset() {
	*x = SCHandshake{}
	mi := &file_message_system_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCHandshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCHandshake) ProtoMessage() {}

func (x *SCHandshake) ProtoReflect() protoreflect.Message {
	mi := &file_message_system_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCHandshake.ProtoReflect.Descriptor instead.
func (*SCHandshake) Descriptor() ([]byte, []int) {
	return file_message_system_service_proto_rawDescGZIP(), []int{1}
}

func (x *SCHandshake) GetStartIndex() int32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *SCHandshake) GetPub() []byte {
	if x != nil {
		return x.Pub
	}
	return nil
}

// Heartbeat request
type CSHeartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientTime    int64                  `protobuf:"varint,1,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"` // Client timestamp, accurate to seconds. Valid if the difference with server time is less than 10s
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSHeartbeat) Reset() {
	*x = CSHeartbeat{}
	mi := &file_message_system_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSHeartbeat) ProtoMessage() {}

func (x *CSHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_message_system_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSHeartbeat.ProtoReflect.Descriptor instead.
func (*CSHeartbeat) Descriptor() ([]byte, []int) {
	return file_message_system_service_proto_rawDescGZIP(), []int{2}
}

func (x *CSHeartbeat) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

// Heartbeat response
type SCHeartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerTime    int64                  `protobuf:"varint,1,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"` // Server timestamp, accurate to seconds
	Code          SCHeartbeat_Code       `protobuf:"varint,2,opt,name=code,proto3,enum=message.SCHeartbeat_Code" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCHeartbeat) Reset() {
	*x = SCHeartbeat{}
	mi := &file_message_system_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCHeartbeat) ProtoMessage() {}

func (x *SCHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_message_system_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCHeartbeat.ProtoReflect.Descriptor instead.
func (*SCHeartbeat) Descriptor() ([]byte, []int) {
	return file_message_system_service_proto_rawDescGZIP(), []int{3}
}

func (x *SCHeartbeat) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *SCHeartbeat) GetCode() SCHeartbeat_Code {
	if x != nil {
		return x.Code
	}
	return SCHeartbeat_ErrServer
}

// Server unexpected error. Returned when the server reports an error after the request protocol and the error is unexpected
type SCServerUnexpectedErr struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mod           int32                  `protobuf:"varint,1,opt,name=mod,proto3" json:"mod,omitempty"`
	Seq           int32                  `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	Msg           string                 `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCServerUnexpectedErr) Reset() {
	*x = SCServerUnexpectedErr{}
	mi := &file_message_system_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCServerUnexpectedErr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCServerUnexpectedErr) ProtoMessage() {}

func (x *SCServerUnexpectedErr) ProtoReflect() protoreflect.Message {
	mi := &file_message_system_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCServerUnexpectedErr.ProtoReflect.Descriptor instead.
func (*SCServerUnexpectedErr) Descriptor() ([]byte, []int) {
	return file_message_system_service_proto_rawDescGZIP(), []int{4}
}

func (x *SCServerUnexpectedErr) GetMod() int32 {
	if x != nil {
		return x.Mod
	}
	return 0
}

func (x *SCServerUnexpectedErr) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *SCServerUnexpectedErr) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// Server triggers user logout
type SCServerLogout struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCServerLogout_Code    `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCServerLogout_Code" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCServerLogout) Reset() {
	*x = SCServerLogout{}
	mi := &file_message_system_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCServerLogout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCServerLogout) ProtoMessage() {}

func (x *SCServerLogout) ProtoReflect() protoreflect.Message {
	mi := &file_message_system_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCServerLogout.ProtoReflect.Descriptor instead.
func (*SCServerLogout) Descriptor() ([]byte, []int) {
	return file_message_system_service_proto_rawDescGZIP(), []int{5}
}

func (x *SCServerLogout) GetCode() SCServerLogout_Code {
	if x != nil {
		return x.Code
	}
	return SCServerLogout_Server
}

var File_message_system_service_proto protoreflect.FileDescriptor

var file_message_system_service_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x0b, 0x43, 0x53, 0x48, 0x61, 0x6e, 0x64, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x75, 0x62, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x70, 0x75, 0x62, 0x22, 0x40, 0x0a, 0x0b, 0x53, 0x43, 0x48,
	0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x75, 0x62,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x70, 0x75, 0x62, 0x22, 0x2e, 0x0a, 0x0b, 0x43,
	0x53, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0b,
	0x53, 0x43, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x31, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x02, 0x22, 0x4d,
	0x0a, 0x15, 0x53, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x6e, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x45, 0x72, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x6f, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xa9, 0x01,
	0x0a, 0x0e, 0x53, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x12, 0x30, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x65, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63,
	0x74, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x0a, 0x0a,
	0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x10, 0x05, 0x32, 0x66, 0x0a, 0x0d, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x09, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x43, 0x53, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x1a, 0x14, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11,
	0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x42, 0x1b, 0x5a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3b, 0x63, 0x6c, 0x69, 0x6d, 0x73, 0x67, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_message_system_service_proto_rawDescOnce sync.Once
	file_message_system_service_proto_rawDescData []byte
)

func file_message_system_service_proto_rawDescGZIP() []byte {
	file_message_system_service_proto_rawDescOnce.Do(func() {
		file_message_system_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_system_service_proto_rawDesc), len(file_message_system_service_proto_rawDesc)))
	})
	return file_message_system_service_proto_rawDescData
}

var file_message_system_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_message_system_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_message_system_service_proto_goTypes = []any{
	(SCHeartbeat_Code)(0),         // 0: message.SCHeartbeat.Code
	(SCServerLogout_Code)(0),      // 1: message.SCServerLogout.Code
	(*CSHandshake)(nil),           // 2: message.CSHandshake
	(*SCHandshake)(nil),           // 3: message.SCHandshake
	(*CSHeartbeat)(nil),           // 4: message.CSHeartbeat
	(*SCHeartbeat)(nil),           // 5: message.SCHeartbeat
	(*SCServerUnexpectedErr)(nil), // 6: message.SCServerUnexpectedErr
	(*SCServerLogout)(nil),        // 7: message.SCServerLogout
}
var file_message_system_service_proto_depIdxs = []int32{
	0, // 0: message.SCHeartbeat.code:type_name -> message.SCHeartbeat.Code
	1, // 1: message.SCServerLogout.code:type_name -> message.SCServerLogout.Code
	4, // 2: message.SystemService.Heartbeat:input_type -> message.CSHeartbeat
	5, // 3: message.SystemService.Heartbeat:output_type -> message.SCHeartbeat
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_message_system_service_proto_init() }
func file_message_system_service_proto_init() {
	if File_message_system_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_system_service_proto_rawDesc), len(file_message_system_service_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_message_system_service_proto_goTypes,
		DependencyIndexes: file_message_system_service_proto_depIdxs,
		EnumInfos:         file_message_system_service_proto_enumTypes,
		MessageInfos:      file_message_system_service_proto_msgTypes,
	}.Build()
	File_message_system_service_proto = out.File
	file_message_system_service_proto_goTypes = nil
	file_message_system_service_proto_depIdxs = nil
}
