// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: message/dev.proto

package climsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A Dev command
type DevCmdProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mod           string                 `protobuf:"bytes,1,opt,name=mod,proto3" json:"mod,omitempty"`   // Command module
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Command name
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"` // Description
	Args          []*DevCmdArgProto      `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"` // All parameters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DevCmdProto) Reset() {
	*x = DevCmdProto{}
	mi := &file_message_dev_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DevCmdProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevCmdProto) ProtoMessage() {}

func (x *DevCmdProto) ProtoReflect() protoreflect.Message {
	mi := &file_message_dev_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevCmdProto.ProtoReflect.Descriptor instead.
func (*DevCmdProto) Descriptor() ([]byte, []int) {
	return file_message_dev_proto_rawDescGZIP(), []int{0}
}

func (x *DevCmdProto) GetMod() string {
	if x != nil {
		return x.Mod
	}
	return ""
}

func (x *DevCmdProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DevCmdProto) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DevCmdProto) GetArgs() []*DevCmdArgProto {
	if x != nil {
		return x.Args
	}
	return nil
}

// A parameter of Dev command
type DevCmdArgProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // Parameter name
	Def           string                 `protobuf:"bytes,2,opt,name=def,proto3" json:"def,omitempty"` // Default value
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DevCmdArgProto) Reset() {
	*x = DevCmdArgProto{}
	mi := &file_message_dev_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DevCmdArgProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevCmdArgProto) ProtoMessage() {}

func (x *DevCmdArgProto) ProtoReflect() protoreflect.Message {
	mi := &file_message_dev_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevCmdArgProto.ProtoReflect.Descriptor instead.
func (*DevCmdArgProto) Descriptor() ([]byte, []int) {
	return file_message_dev_proto_rawDescGZIP(), []int{1}
}

func (x *DevCmdArgProto) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DevCmdArgProto) GetDef() string {
	if x != nil {
		return x.Def
	}
	return ""
}

var File_message_dev_proto protoreflect.FileDescriptor

const file_message_dev_proto_rawDesc = "" +
	"\n" +
	"\x11message/dev.proto\x12\amessage\"t\n" +
	"\vDevCmdProto\x12\x10\n" +
	"\x03mod\x18\x01 \x01(\tR\x03mod\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04desc\x18\x03 \x01(\tR\x04desc\x12+\n" +
	"\x04args\x18\x04 \x03(\v2\x17.message.DevCmdArgProtoR\x04args\"4\n" +
	"\x0eDevCmdArgProto\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x10\n" +
	"\x03def\x18\x02 \x01(\tR\x03defB\x1bZ\x19api/client/message;climsgb\x06proto3"

var (
	file_message_dev_proto_rawDescOnce sync.Once
	file_message_dev_proto_rawDescData []byte
)

func file_message_dev_proto_rawDescGZIP() []byte {
	file_message_dev_proto_rawDescOnce.Do(func() {
		file_message_dev_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_dev_proto_rawDesc), len(file_message_dev_proto_rawDesc)))
	})
	return file_message_dev_proto_rawDescData
}

var file_message_dev_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_message_dev_proto_goTypes = []any{
	(*DevCmdProto)(nil),    // 0: message.DevCmdProto
	(*DevCmdArgProto)(nil), // 1: message.DevCmdArgProto
}
var file_message_dev_proto_depIdxs = []int32{
	1, // 0: message.DevCmdProto.args:type_name -> message.DevCmdArgProto
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_message_dev_proto_init() }
func file_message_dev_proto_init() {
	if File_message_dev_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_dev_proto_rawDesc), len(file_message_dev_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_dev_proto_goTypes,
		DependencyIndexes: file_message_dev_proto_depIdxs,
		MessageInfos:      file_message_dev_proto_msgTypes,
	}.Build()
	File_message_dev_proto = out.File
	file_message_dev_proto_goTypes = nil
	file_message_dev_proto_depIdxs = nil
}
