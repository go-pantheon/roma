// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: message/user_service.proto

package climsg

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SCLogin_Code int32

const (
	SCLogin_ErrUnspecified       SCLogin_Code = 0 // Please try again later
	SCLogin_Succeeded            SCLogin_Code = 1 // Succeeded
	SCLogin_ErrAccountIdNotExist SCLogin_Code = 2 // Account does not exist
	SCLogin_ErrAccountBanned     SCLogin_Code = 3 // Account banned
)

// Enum value maps for SCLogin_Code.
var (
	SCLogin_Code_name = map[int32]string{
		0: "ErrUnspecified",
		1: "Succeeded",
		2: "ErrAccountIdNotExist",
		3: "ErrAccountBanned",
	}
	SCLogin_Code_value = map[string]int32{
		"ErrUnspecified":       0,
		"Succeeded":            1,
		"ErrAccountIdNotExist": 2,
		"ErrAccountBanned":     3,
	}
)

func (x SCLogin_Code) Enum() *SCLogin_Code {
	p := new(SCLogin_Code)
	*p = x
	return p
}

func (x SCLogin_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCLogin_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_user_service_proto_enumTypes[0].Descriptor()
}

func (SCLogin_Code) Type() protoreflect.EnumType {
	return &file_message_user_service_proto_enumTypes[0]
}

func (x SCLogin_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCLogin_Code.Descriptor instead.
func (SCLogin_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_user_service_proto_rawDescGZIP(), []int{2, 0}
}

type SCUpdateName_Code int32

const (
	SCUpdateName_ErrUnspecified    SCUpdateName_Code = 0 // Please try again later
	SCUpdateName_Succeeded         SCUpdateName_Code = 1 // Succeeded
	SCUpdateName_ErrNameIllegal    SCUpdateName_Code = 2 // Name is illegal
	SCUpdateName_ErrNameNotChanged SCUpdateName_Code = 3 // Name not changed
)

// Enum value maps for SCUpdateName_Code.
var (
	SCUpdateName_Code_name = map[int32]string{
		0: "ErrUnspecified",
		1: "Succeeded",
		2: "ErrNameIllegal",
		3: "ErrNameNotChanged",
	}
	SCUpdateName_Code_value = map[string]int32{
		"ErrUnspecified":    0,
		"Succeeded":         1,
		"ErrNameIllegal":    2,
		"ErrNameNotChanged": 3,
	}
)

func (x SCUpdateName_Code) Enum() *SCUpdateName_Code {
	p := new(SCUpdateName_Code)
	*p = x
	return p
}

func (x SCUpdateName_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCUpdateName_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_user_service_proto_enumTypes[1].Descriptor()
}

func (SCUpdateName_Code) Type() protoreflect.EnumType {
	return &file_message_user_service_proto_enumTypes[1]
}

func (x SCUpdateName_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCUpdateName_Code.Descriptor instead.
func (SCUpdateName_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_user_service_proto_rawDescGZIP(), []int{4, 0}
}

type SCSetGender_Code int32

const (
	SCSetGender_ErrUnspecified   SCSetGender_Code = 0 // Please try again later
	SCSetGender_Succeeded        SCSetGender_Code = 1 // Succeeded
	SCSetGender_ErrGenderIllegal SCSetGender_Code = 2 // Gender is illegal
	SCSetGender_ErrGenderSet     SCSetGender_Code = 3 // Gender has been set
)

// Enum value maps for SCSetGender_Code.
var (
	SCSetGender_Code_name = map[int32]string{
		0: "ErrUnspecified",
		1: "Succeeded",
		2: "ErrGenderIllegal",
		3: "ErrGenderSet",
	}
	SCSetGender_Code_value = map[string]int32{
		"ErrUnspecified":   0,
		"Succeeded":        1,
		"ErrGenderIllegal": 2,
		"ErrGenderSet":     3,
	}
)

func (x SCSetGender_Code) Enum() *SCSetGender_Code {
	p := new(SCSetGender_Code)
	*p = x
	return p
}

func (x SCSetGender_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCSetGender_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_user_service_proto_enumTypes[2].Descriptor()
}

func (SCSetGender_Code) Type() protoreflect.EnumType {
	return &file_message_user_service_proto_enumTypes[2]
}

func (x SCSetGender_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCSetGender_Code.Descriptor instead.
func (SCSetGender_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_user_service_proto_rawDescGZIP(), []int{6, 0}
}

// @push Latest user data
// The client receives the data and updates its own data to avoid data inconsistency between the client and the server when GM modifies data or the server restarts
type SCPushSyncUser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *UserProto             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // Player data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCPushSyncUser) Reset() {
	*x = SCPushSyncUser{}
	mi := &file_message_user_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCPushSyncUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCPushSyncUser) ProtoMessage() {}

func (x *SCPushSyncUser) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCPushSyncUser.ProtoReflect.Descriptor instead.
func (*SCPushSyncUser) Descriptor() ([]byte, []int) {
	return file_message_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *SCPushSyncUser) GetUser() *UserProto {
	if x != nil {
		return x.User
	}
	return nil
}

// Request: Login
type CSLogin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reconnect     bool                   `protobuf:"varint,1,opt,name=reconnect,proto3" json:"reconnect,omitempty"` // Whether it is a reconnection. When the client discovers that the network is disconnected during the online period and executes automatic reconnection, it is true.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSLogin) Reset() {
	*x = CSLogin{}
	mi := &file_message_user_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSLogin) ProtoMessage() {}

func (x *CSLogin) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSLogin.ProtoReflect.Descriptor instead.
func (*CSLogin) Descriptor() ([]byte, []int) {
	return file_message_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *CSLogin) GetReconnect() bool {
	if x != nil {
		return x.Reconnect
	}
	return false
}

// Response: Login
type SCLogin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCLogin_Code           `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCLogin_Code" json:"code,omitempty"`     // Status code
	ServerTime    int64                  `protobuf:"varint,2,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"` // Server timestamp, accurate to seconds
	User          *UserProto             `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`                                // Player data
	Newborn       bool                   `protobuf:"varint,4,opt,name=newborn,proto3" json:"newborn,omitempty"`                         // Whether the player is newborn
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCLogin) Reset() {
	*x = SCLogin{}
	mi := &file_message_user_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCLogin) ProtoMessage() {}

func (x *SCLogin) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCLogin.ProtoReflect.Descriptor instead.
func (*SCLogin) Descriptor() ([]byte, []int) {
	return file_message_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *SCLogin) GetCode() SCLogin_Code {
	if x != nil {
		return x.Code
	}
	return SCLogin_ErrUnspecified
}

func (x *SCLogin) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *SCLogin) GetUser() *UserProto {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SCLogin) GetNewborn() bool {
	if x != nil {
		return x.Newborn
	}
	return false
}

// Request: Update name
type CSUpdateName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSUpdateName) Reset() {
	*x = CSUpdateName{}
	mi := &file_message_user_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSUpdateName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSUpdateName) ProtoMessage() {}

func (x *CSUpdateName) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSUpdateName.ProtoReflect.Descriptor instead.
func (*CSUpdateName) Descriptor() ([]byte, []int) {
	return file_message_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *CSUpdateName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response: Update name
type SCUpdateName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCUpdateName_Code      `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCUpdateName_Code" json:"code,omitempty"` // Status code
	IsIllegal     bool                   `protobuf:"varint,2,opt,name=is_illegal,json=isIllegal,proto3" json:"is_illegal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCUpdateName) Reset() {
	*x = SCUpdateName{}
	mi := &file_message_user_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCUpdateName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCUpdateName) ProtoMessage() {}

func (x *SCUpdateName) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCUpdateName.ProtoReflect.Descriptor instead.
func (*SCUpdateName) Descriptor() ([]byte, []int) {
	return file_message_user_service_proto_rawDescGZIP(), []int{4}
}

func (x *SCUpdateName) GetCode() SCUpdateName_Code {
	if x != nil {
		return x.Code
	}
	return SCUpdateName_ErrUnspecified
}

func (x *SCUpdateName) GetIsIllegal() bool {
	if x != nil {
		return x.IsIllegal
	}
	return false
}

// Request: Set gender
type CSSetGender struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gender        int32                  `protobuf:"varint,1,opt,name=gender,proto3" json:"gender,omitempty"` // Gender. Same as ActorProto.gender
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSSetGender) Reset() {
	*x = CSSetGender{}
	mi := &file_message_user_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSSetGender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSSetGender) ProtoMessage() {}

func (x *CSSetGender) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSSetGender.ProtoReflect.Descriptor instead.
func (*CSSetGender) Descriptor() ([]byte, []int) {
	return file_message_user_service_proto_rawDescGZIP(), []int{5}
}

func (x *CSSetGender) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

// Response: Set gender
type SCSetGender struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCSetGender_Code       `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCSetGender_Code" json:"code,omitempty"` // Status code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCSetGender) Reset() {
	*x = SCSetGender{}
	mi := &file_message_user_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCSetGender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCSetGender) ProtoMessage() {}

func (x *SCSetGender) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCSetGender.ProtoReflect.Descriptor instead.
func (*SCSetGender) Descriptor() ([]byte, []int) {
	return file_message_user_service_proto_rawDescGZIP(), []int{6}
}

func (x *SCSetGender) GetCode() SCSetGender_Code {
	if x != nil {
		return x.Code
	}
	return SCSetGender_ErrUnspecified
}

var File_message_user_service_proto protoreflect.FileDescriptor

const file_message_user_service_proto_rawDesc = "" +
	"\n" +
	"\x1amessage/user_service.proto\x12\amessage\x1a\x1cgoogle/api/annotations.proto\x1a\x12message/user.proto\"8\n" +
	"\x0eSCPushSyncUser\x12&\n" +
	"\x04user\x18\x01 \x01(\v2\x12.message.UserProtoR\x04user\"'\n" +
	"\aCSLogin\x12\x1c\n" +
	"\treconnect\x18\x01 \x01(\bR\treconnect\"\xf2\x01\n" +
	"\aSCLogin\x12)\n" +
	"\x04code\x18\x01 \x01(\x0e2\x15.message.SCLogin.CodeR\x04code\x12\x1f\n" +
	"\vserver_time\x18\x02 \x01(\x03R\n" +
	"serverTime\x12&\n" +
	"\x04user\x18\x03 \x01(\v2\x12.message.UserProtoR\x04user\x12\x18\n" +
	"\anewborn\x18\x04 \x01(\bR\anewborn\"Y\n" +
	"\x04Code\x12\x12\n" +
	"\x0eErrUnspecified\x10\x00\x12\r\n" +
	"\tSucceeded\x10\x01\x12\x18\n" +
	"\x14ErrAccountIdNotExist\x10\x02\x12\x14\n" +
	"\x10ErrAccountBanned\x10\x03\"\"\n" +
	"\fCSUpdateName\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\xb3\x01\n" +
	"\fSCUpdateName\x12.\n" +
	"\x04code\x18\x01 \x01(\x0e2\x1a.message.SCUpdateName.CodeR\x04code\x12\x1d\n" +
	"\n" +
	"is_illegal\x18\x02 \x01(\bR\tisIllegal\"T\n" +
	"\x04Code\x12\x12\n" +
	"\x0eErrUnspecified\x10\x00\x12\r\n" +
	"\tSucceeded\x10\x01\x12\x12\n" +
	"\x0eErrNameIllegal\x10\x02\x12\x15\n" +
	"\x11ErrNameNotChanged\x10\x03\"%\n" +
	"\vCSSetGender\x12\x16\n" +
	"\x06gender\x18\x01 \x01(\x05R\x06gender\"\x8f\x01\n" +
	"\vSCSetGender\x12-\n" +
	"\x04code\x18\x01 \x01(\x0e2\x19.message.SCSetGender.CodeR\x04code\"Q\n" +
	"\x04Code\x12\x12\n" +
	"\x0eErrUnspecified\x10\x00\x12\r\n" +
	"\tSucceeded\x10\x01\x12\x14\n" +
	"\x10ErrGenderIllegal\x10\x02\x12\x10\n" +
	"\fErrGenderSet\x10\x032\x82\x02\n" +
	"\vUserService\x12C\n" +
	"\x05Login\x12\x10.message.CSLogin\x1a\x10.message.SCLogin\"\x16\x82\xd3\xe4\x93\x02\x10:\x01*\"\v/user/login\x12X\n" +
	"\n" +
	"UpdateName\x12\x15.message.CSUpdateName\x1a\x15.message.SCUpdateName\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/user/name/update\x12T\n" +
	"\tSetGender\x12\x14.message.CSSetGender\x1a\x14.message.SCSetGender\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/user/gender/setB\x1bZ\x19api/client/message;climsgb\x06proto3"

var (
	file_message_user_service_proto_rawDescOnce sync.Once
	file_message_user_service_proto_rawDescData []byte
)

func file_message_user_service_proto_rawDescGZIP() []byte {
	file_message_user_service_proto_rawDescOnce.Do(func() {
		file_message_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_user_service_proto_rawDesc), len(file_message_user_service_proto_rawDesc)))
	})
	return file_message_user_service_proto_rawDescData
}

var file_message_user_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_message_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_message_user_service_proto_goTypes = []any{
	(SCLogin_Code)(0),      // 0: message.SCLogin.Code
	(SCUpdateName_Code)(0), // 1: message.SCUpdateName.Code
	(SCSetGender_Code)(0),  // 2: message.SCSetGender.Code
	(*SCPushSyncUser)(nil), // 3: message.SCPushSyncUser
	(*CSLogin)(nil),        // 4: message.CSLogin
	(*SCLogin)(nil),        // 5: message.SCLogin
	(*CSUpdateName)(nil),   // 6: message.CSUpdateName
	(*SCUpdateName)(nil),   // 7: message.SCUpdateName
	(*CSSetGender)(nil),    // 8: message.CSSetGender
	(*SCSetGender)(nil),    // 9: message.SCSetGender
	(*UserProto)(nil),      // 10: message.UserProto
}
var file_message_user_service_proto_depIdxs = []int32{
	10, // 0: message.SCPushSyncUser.user:type_name -> message.UserProto
	0,  // 1: message.SCLogin.code:type_name -> message.SCLogin.Code
	10, // 2: message.SCLogin.user:type_name -> message.UserProto
	1,  // 3: message.SCUpdateName.code:type_name -> message.SCUpdateName.Code
	2,  // 4: message.SCSetGender.code:type_name -> message.SCSetGender.Code
	4,  // 5: message.UserService.Login:input_type -> message.CSLogin
	6,  // 6: message.UserService.UpdateName:input_type -> message.CSUpdateName
	8,  // 7: message.UserService.SetGender:input_type -> message.CSSetGender
	5,  // 8: message.UserService.Login:output_type -> message.SCLogin
	7,  // 9: message.UserService.UpdateName:output_type -> message.SCUpdateName
	9,  // 10: message.UserService.SetGender:output_type -> message.SCSetGender
	8,  // [8:11] is the sub-list for method output_type
	5,  // [5:8] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_message_user_service_proto_init() }
func file_message_user_service_proto_init() {
	if File_message_user_service_proto != nil {
		return
	}
	file_message_user_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_user_service_proto_rawDesc), len(file_message_user_service_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_message_user_service_proto_goTypes,
		DependencyIndexes: file_message_user_service_proto_depIdxs,
		EnumInfos:         file_message_user_service_proto_enumTypes,
		MessageInfos:      file_message_user_service_proto_msgTypes,
	}.Build()
	File_message_user_service_proto = out.File
	file_message_user_service_proto_goTypes = nil
	file_message_user_service_proto_depIdxs = nil
}
