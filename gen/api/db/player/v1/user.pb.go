// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: player/v1/user.proto

package dbv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// User Data
type UserProto struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// --- Basic Information ---
	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`                                                              // @gotags: bson:"_id"
	Sid                int64  `protobuf:"varint,2,opt,name=sid,proto3" json:"sid,omitempty" bson:"sid"`                                                            // @gotags: bson:"sid"
	Name               string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" bson:"name"`                                                           // @gotags: bson:"name"
	CreatedAt          int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`                               // @gotags: bson:"created_at"
	LoginAt            int64  `protobuf:"varint,5,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty" bson:"login_at"`                                     // @gotags: bson:"login_at"
	LogoutAt           int64  `protobuf:"varint,6,opt,name=logout_at,json=logoutAt,proto3" json:"logout_at,omitempty" bson:"logout_at"`                                  // @gotags: bson:"logout_at"
	LastOnlineAt       int64  `protobuf:"varint,7,opt,name=last_online_at,json=lastOnlineAt,proto3" json:"last_online_at,omitempty" bson:"last_online_at"`                    // @gotags: bson:"last_online_at"
	LastOnlineIp       string `protobuf:"bytes,8,opt,name=last_online_ip,json=lastOnlineIp,proto3" json:"last_online_ip,omitempty" bson:"last_online_ip"`                     // @gotags: bson:"last_online_ip"
	NextDailyResetAt   int64  `protobuf:"varint,9,opt,name=next_daily_reset_at,json=nextDailyResetAt,proto3" json:"next_daily_reset_at,omitempty" bson:"next_daily_reset_at"`      // @gotags: bson:"next_daily_reset_at" Next Daily Reset Time(Unix Timestamp)
	DailyOnlineSeconds int64  `protobuf:"varint,10,opt,name=daily_online_seconds,json=dailyOnlineSeconds,proto3" json:"daily_online_seconds,omitempty" bson:"daily_online_seconds"` // @gotags: bson:"daily_online_seconds" Daily Online Time(Seconds)
	TotalOnlineSeconds int64  `protobuf:"varint,11,opt,name=total_online_seconds,json=totalOnlineSeconds,proto3" json:"total_online_seconds,omitempty" bson:"total_online_seconds"` // @gotags: bson:"total_online_seconds" Total Online Time(Seconds)
	// --- Version Information ---
	Version       int64  `protobuf:"varint,12,opt,name=version,proto3" json:"version,omitempty" bson:"version"`                                 // @gotags: bson:"version" Player Data Version
	ServerVersion string `protobuf:"bytes,13,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty" bson:"server_version"` // @gotags: bson:"server_version" Current Server Version
	// --- Development and Testing Related Data ---
	Dev      *DevProto      `protobuf:"bytes,21,opt,name=dev,proto3" json:"dev,omitempty" bson:"dev"`           // @gotags: bson:"dev" Development and Testing Related Data
	System   *SystemProto   `protobuf:"bytes,22,opt,name=system,proto3" json:"system,omitempty" bson:"system"`     // @gotags: bson:"system" System Data
	Plunders *PlundersProto `protobuf:"bytes,23,opt,name=plunders,proto3" json:"plunders,omitempty" bson:"plunders"` // @gotags: bson:"plunders" Drop Reward Related Data
	// --- User Related Data ---
	Basic    *UserBasicProto    `protobuf:"bytes,31,opt,name=basic,proto3" json:"basic,omitempty" bson:"basic"`                       // @gotags: bson:"basic" Basic Information
	Storage  *UserStorageProto  `protobuf:"bytes,32,opt,name=storage,proto3" json:"storage,omitempty" bson:"storage"`                   // @gotags: bson:"storage" Storage
	HeroList *UserHeroListProto `protobuf:"bytes,33,opt,name=hero_list,json=heroList,proto3" json:"hero_list,omitempty" bson:"hero_list"` // @gotags: bson:"hero_list" Hero
	// --- Module Related Data ---
	Room          *UserRoomProto `protobuf:"bytes,80,opt,name=room,proto3" json:"room,omitempty" bson:"room"` // @gotags: bson:"room" Room Data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserProto) Reset() {
	*x = UserProto{}
	mi := &file_player_v1_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProto) ProtoMessage() {}

func (x *UserProto) ProtoReflect() protoreflect.Message {
	mi := &file_player_v1_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProto.ProtoReflect.Descriptor instead.
func (*UserProto) Descriptor() ([]byte, []int) {
	return file_player_v1_user_proto_rawDescGZIP(), []int{0}
}

func (x *UserProto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserProto) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *UserProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserProto) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserProto) GetLoginAt() int64 {
	if x != nil {
		return x.LoginAt
	}
	return 0
}

func (x *UserProto) GetLogoutAt() int64 {
	if x != nil {
		return x.LogoutAt
	}
	return 0
}

func (x *UserProto) GetLastOnlineAt() int64 {
	if x != nil {
		return x.LastOnlineAt
	}
	return 0
}

func (x *UserProto) GetLastOnlineIp() string {
	if x != nil {
		return x.LastOnlineIp
	}
	return ""
}

func (x *UserProto) GetNextDailyResetAt() int64 {
	if x != nil {
		return x.NextDailyResetAt
	}
	return 0
}

func (x *UserProto) GetDailyOnlineSeconds() int64 {
	if x != nil {
		return x.DailyOnlineSeconds
	}
	return 0
}

func (x *UserProto) GetTotalOnlineSeconds() int64 {
	if x != nil {
		return x.TotalOnlineSeconds
	}
	return 0
}

func (x *UserProto) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserProto) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *UserProto) GetDev() *DevProto {
	if x != nil {
		return x.Dev
	}
	return nil
}

func (x *UserProto) GetSystem() *SystemProto {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *UserProto) GetPlunders() *PlundersProto {
	if x != nil {
		return x.Plunders
	}
	return nil
}

func (x *UserProto) GetBasic() *UserBasicProto {
	if x != nil {
		return x.Basic
	}
	return nil
}

func (x *UserProto) GetStorage() *UserStorageProto {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *UserProto) GetHeroList() *UserHeroListProto {
	if x != nil {
		return x.HeroList
	}
	return nil
}

func (x *UserProto) GetRoom() *UserRoomProto {
	if x != nil {
		return x.Room
	}
	return nil
}

// Basic Information
type UserBasicProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gender        int32                  `protobuf:"varint,1,opt,name=gender,proto3" json:"gender,omitempty" bson:"gender"`    // @gotags: bson:"gender" Gender. 0: Default Not Selected Gender, 1: Male, 2: Female
	Recharge      *RechargeProto         `protobuf:"bytes,2,opt,name=recharge,proto3" json:"recharge,omitempty" bson:"recharge"` // @gotags: bson:"recharge"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserBasicProto) Reset() {
	*x = UserBasicProto{}
	mi := &file_player_v1_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserBasicProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBasicProto) ProtoMessage() {}

func (x *UserBasicProto) ProtoReflect() protoreflect.Message {
	mi := &file_player_v1_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBasicProto.ProtoReflect.Descriptor instead.
func (*UserBasicProto) Descriptor() ([]byte, []int) {
	return file_player_v1_user_proto_rawDescGZIP(), []int{1}
}

func (x *UserBasicProto) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserBasicProto) GetRecharge() *RechargeProto {
	if x != nil {
		return x.Recharge
	}
	return nil
}

type RechargeProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        string                 `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty" bson:"amount"` // @gotags: bson:"amount" Player Total Recharge Amount
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RechargeProto) Reset() {
	*x = RechargeProto{}
	mi := &file_player_v1_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RechargeProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargeProto) ProtoMessage() {}

func (x *RechargeProto) ProtoReflect() protoreflect.Message {
	mi := &file_player_v1_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargeProto.ProtoReflect.Descriptor instead.
func (*RechargeProto) Descriptor() ([]byte, []int) {
	return file_player_v1_user_proto_rawDescGZIP(), []int{2}
}

func (x *RechargeProto) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

// Development and Testing Related Data
type DevProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeOffset    int64                  `protobuf:"varint,1,opt,name=time_offset,json=timeOffset,proto3" json:"time_offset,omitempty" bson:"time_offset"` // @gotags: bson:"time_offset"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DevProto) Reset() {
	*x = DevProto{}
	mi := &file_player_v1_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DevProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevProto) ProtoMessage() {}

func (x *DevProto) ProtoReflect() protoreflect.Message {
	mi := &file_player_v1_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevProto.ProtoReflect.Descriptor instead.
func (*DevProto) Descriptor() ([]byte, []int) {
	return file_player_v1_user_proto_rawDescGZIP(), []int{3}
}

func (x *DevProto) GetTimeOffset() int64 {
	if x != nil {
		return x.TimeOffset
	}
	return 0
}

// Drop Reward Related Data
type PlundersProto struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Plunders      map[int64]*PlunderStateProto `protobuf:"bytes,1,rep,name=plunders,proto3" json:"plunders,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" bson:"plunders"` // @gotags: bson:"plunders"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlundersProto) Reset() {
	*x = PlundersProto{}
	mi := &file_player_v1_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlundersProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlundersProto) ProtoMessage() {}

func (x *PlundersProto) ProtoReflect() protoreflect.Message {
	mi := &file_player_v1_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlundersProto.ProtoReflect.Descriptor instead.
func (*PlundersProto) Descriptor() ([]byte, []int) {
	return file_player_v1_user_proto_rawDescGZIP(), []int{4}
}

func (x *PlundersProto) GetPlunders() map[int64]*PlunderStateProto {
	if x != nil {
		return x.Plunders
	}
	return nil
}

// Drop State
type PlunderStateProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Weights       map[int64]int64        `protobuf:"bytes,1,rep,name=weights,proto3" json:"weights,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value" bson:"weights"` // @gotags: bson:"weights" Current Drop Weight
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlunderStateProto) Reset() {
	*x = PlunderStateProto{}
	mi := &file_player_v1_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlunderStateProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlunderStateProto) ProtoMessage() {}

func (x *PlunderStateProto) ProtoReflect() protoreflect.Message {
	mi := &file_player_v1_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlunderStateProto.ProtoReflect.Descriptor instead.
func (*PlunderStateProto) Descriptor() ([]byte, []int) {
	return file_player_v1_user_proto_rawDescGZIP(), []int{5}
}

func (x *PlunderStateProto) GetWeights() map[int64]int64 {
	if x != nil {
		return x.Weights
	}
	return nil
}

var File_player_v1_user_proto protoreflect.FileDescriptor

var file_player_v1_user_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x1a, 0x14, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x68, 0x65, 0x72, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96,
	0x06, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x49, 0x70, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x12, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x03, 0x64, 0x65, 0x76,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x64, 0x65, 0x76,
	0x12, 0x2e, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x34, 0x0a, 0x08, 0x70, 0x6c, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x70, 0x6c,
	0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x39,
	0x0a, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x08, 0x68, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x6f, 0x6f,
	0x6d, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x5e, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x22, 0x27, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x2b, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xae, 0x01,
	0x0a, 0x0d, 0x50, 0x6c, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x42, 0x0a, 0x08, 0x70, 0x6c, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x75, 0x6e,
	0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x70, 0x6c, 0x75, 0x6e, 0x64,
	0x65, 0x72, 0x73, 0x1a, 0x59, 0x0a, 0x0d, 0x50, 0x6c, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x94,
	0x01, 0x0a, 0x11, 0x50, 0x6c, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x43, 0x0a, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x17, 0x5a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x62, 0x2f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x62, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_player_v1_user_proto_rawDescOnce sync.Once
	file_player_v1_user_proto_rawDescData []byte
)

func file_player_v1_user_proto_rawDescGZIP() []byte {
	file_player_v1_user_proto_rawDescOnce.Do(func() {
		file_player_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_player_v1_user_proto_rawDesc), len(file_player_v1_user_proto_rawDesc)))
	})
	return file_player_v1_user_proto_rawDescData
}

var file_player_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_player_v1_user_proto_goTypes = []any{
	(*UserProto)(nil),         // 0: player.v1.UserProto
	(*UserBasicProto)(nil),    // 1: player.v1.UserBasicProto
	(*RechargeProto)(nil),     // 2: player.v1.RechargeProto
	(*DevProto)(nil),          // 3: player.v1.DevProto
	(*PlundersProto)(nil),     // 4: player.v1.PlundersProto
	(*PlunderStateProto)(nil), // 5: player.v1.PlunderStateProto
	nil,                       // 6: player.v1.PlundersProto.PlundersEntry
	nil,                       // 7: player.v1.PlunderStateProto.WeightsEntry
	(*SystemProto)(nil),       // 8: player.v1.SystemProto
	(*UserStorageProto)(nil),  // 9: player.v1.UserStorageProto
	(*UserHeroListProto)(nil), // 10: player.v1.UserHeroListProto
	(*UserRoomProto)(nil),     // 11: player.v1.UserRoomProto
}
var file_player_v1_user_proto_depIdxs = []int32{
	3,  // 0: player.v1.UserProto.dev:type_name -> player.v1.DevProto
	8,  // 1: player.v1.UserProto.system:type_name -> player.v1.SystemProto
	4,  // 2: player.v1.UserProto.plunders:type_name -> player.v1.PlundersProto
	1,  // 3: player.v1.UserProto.basic:type_name -> player.v1.UserBasicProto
	9,  // 4: player.v1.UserProto.storage:type_name -> player.v1.UserStorageProto
	10, // 5: player.v1.UserProto.hero_list:type_name -> player.v1.UserHeroListProto
	11, // 6: player.v1.UserProto.room:type_name -> player.v1.UserRoomProto
	2,  // 7: player.v1.UserBasicProto.recharge:type_name -> player.v1.RechargeProto
	6,  // 8: player.v1.PlundersProto.plunders:type_name -> player.v1.PlundersProto.PlundersEntry
	7,  // 9: player.v1.PlunderStateProto.weights:type_name -> player.v1.PlunderStateProto.WeightsEntry
	5,  // 10: player.v1.PlundersProto.PlundersEntry.value:type_name -> player.v1.PlunderStateProto
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_player_v1_user_proto_init() }
func file_player_v1_user_proto_init() {
	if File_player_v1_user_proto != nil {
		return
	}
	file_player_v1_room_proto_init()
	file_player_v1_hero_proto_init()
	file_player_v1_storage_proto_init()
	file_player_v1_system_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_player_v1_user_proto_rawDesc), len(file_player_v1_user_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_player_v1_user_proto_goTypes,
		DependencyIndexes: file_player_v1_user_proto_depIdxs,
		MessageInfos:      file_player_v1_user_proto_msgTypes,
	}.Build()
	File_player_v1_user_proto = out.File
	file_player_v1_user_proto_goTypes = nil
	file_player_v1_user_proto_depIdxs = nil
}
