// Code generated by gen-api-db. DO NOT EDIT.

package dbv1

import (
	"github.com/go-pantheon/fabrica-util/errors"
	"github.com/go-pantheon/roma/pkg/universe/life"
)

func EncodeUserModuleProto(module life.Module) *UserModuleProto {
	p := module.EncodeServer()

	switch p.(type) {
	case *UserBasicProto:
		return p.(*UserBasicProto).Wrap()
	case *UserDevProto:
		return p.(*UserDevProto).Wrap()
	case *UserStatusProto:
		return p.(*UserStatusProto).Wrap()
	case *UserSystemProto:
		return p.(*UserSystemProto).Wrap()
	case *UserPlunderListProto:
		return p.(*UserPlunderListProto).Wrap()
	case *UserHeroListProto:
		return p.(*UserHeroListProto).Wrap()
	case *UserStorageProto:
		return p.(*UserStorageProto).Wrap()
	case *UserRechargeProto:
		return p.(*UserRechargeProto).Wrap()
	case *UserRoomProto:
		return p.(*UserRoomProto).Wrap()
	default:
		return nil
	}
}

func DecodeUserModuleProto(p *UserModuleProto, module life.Module) error {
	if p.Module == nil {
		return errors.New("UserModuleProto.Module is nil")
	}

	switch p.Module.(type) {
	case *UserModuleProto_Basic:
		return module.DecodeServer(p.GetBasic())
	case *UserModuleProto_Dev:
		return module.DecodeServer(p.GetDev())
	case *UserModuleProto_Status:
		return module.DecodeServer(p.GetStatus())
	case *UserModuleProto_System:
		return module.DecodeServer(p.GetSystem())
	case *UserModuleProto_PlunderList:
		return module.DecodeServer(p.GetPlunderList())
	case *UserModuleProto_HeroList:
		return module.DecodeServer(p.GetHeroList())
	case *UserModuleProto_Storage:
		return module.DecodeServer(p.GetStorage())
	case *UserModuleProto_Recharge:
		return module.DecodeServer(p.GetRecharge())
	case *UserModuleProto_Room:
		return module.DecodeServer(p.GetRoom())
	default:
		return errors.Errorf("UserModuleProto decode invalid type: %T", p.Module)
	}
}

func (x *UserBasicProto) Wrap() *UserModuleProto {
	mp := UserModuleProtoPool.GetBasic()
	mp.Module.(*UserModuleProto_Basic).Basic = x

	return mp
}

func (x *UserDevProto) Wrap() *UserModuleProto {
	mp := UserModuleProtoPool.GetDev()
	mp.Module.(*UserModuleProto_Dev).Dev = x

	return mp
}

func (x *UserStatusProto) Wrap() *UserModuleProto {
	mp := UserModuleProtoPool.GetStatus()
	mp.Module.(*UserModuleProto_Status).Status = x

	return mp
}

func (x *UserSystemProto) Wrap() *UserModuleProto {
	mp := UserModuleProtoPool.GetSystem()
	mp.Module.(*UserModuleProto_System).System = x

	return mp
}

func (x *UserPlunderListProto) Wrap() *UserModuleProto {
	mp := UserModuleProtoPool.GetPlunderList()
	mp.Module.(*UserModuleProto_PlunderList).PlunderList = x

	return mp
}

func (x *UserHeroListProto) Wrap() *UserModuleProto {
	mp := UserModuleProtoPool.GetHeroList()
	mp.Module.(*UserModuleProto_HeroList).HeroList = x

	return mp
}

func (x *UserStorageProto) Wrap() *UserModuleProto {
	mp := UserModuleProtoPool.GetStorage()
	mp.Module.(*UserModuleProto_Storage).Storage = x

	return mp
}

func (x *UserRechargeProto) Wrap() *UserModuleProto {
	mp := UserModuleProtoPool.GetRecharge()
	mp.Module.(*UserModuleProto_Recharge).Recharge = x

	return mp
}

func (x *UserRoomProto) Wrap() *UserModuleProto {
	mp := UserModuleProtoPool.GetRoom()
	mp.Module.(*UserModuleProto_Room).Room = x

	return mp
}
