// Code generated by gen-api-db. DO NOT EDIT.

package dbv1

import (
	"github.com/go-pantheon/fabrica-util/errors"
	"github.com/go-pantheon/roma/pkg/universe/life"
	"google.golang.org/protobuf/proto"
)

func EncodeUserModuleProto(module life.Module) (*UserModuleProto, error) {
	p := module.EncodeServer()
	mp := UserModuleProtoPool.Get()

	encoder, ok := p.(userModuleProtoEncoder)
	if !ok {
		return nil, errors.Errorf("UserModuleProto encode invalid type: %T", module)
	}

	mp.Module = encoder.Wrap()

	return mp, nil
}

func DecodeUserModuleProto(p *UserModuleProto, module life.Module) error {
	if p.Module == nil {
		return errors.New("UserModuleProto.Module is nil")
	}

	decoder, ok := p.Module.(userModuleProtoDecoder)
	if !ok {
		return errors.Errorf("UserModuleProto decode invalid type: %T", p.Module)
	}

	return module.DecodeServer(decoder.Unwrap())
}

type userModuleProtoEncoder interface {
	Wrap() isUserModuleProto_Module
}

type userModuleProtoDecoder interface {
	Unwrap() proto.Message
}

func (x *UserBasicProto) Wrap() isUserModuleProto_Module {
	return &UserModuleProto_Basic{
		Basic: x,
	}
}

func (x *UserModuleProto_Basic) Unwrap() proto.Message {
	return x.Basic
}

func (x *UserDevProto) Wrap() isUserModuleProto_Module {
	return &UserModuleProto_Dev{
		Dev: x,
	}
}

func (x *UserModuleProto_Dev) Unwrap() proto.Message {
	return x.Dev
}

func (x *UserStatusProto) Wrap() isUserModuleProto_Module {
	return &UserModuleProto_Status{
		Status: x,
	}
}

func (x *UserModuleProto_Status) Unwrap() proto.Message {
	return x.Status
}

func (x *UserSystemProto) Wrap() isUserModuleProto_Module {
	return &UserModuleProto_System{
		System: x,
	}
}

func (x *UserModuleProto_System) Unwrap() proto.Message {
	return x.System
}

func (x *UserPlunderListProto) Wrap() isUserModuleProto_Module {
	return &UserModuleProto_PlunderList{
		PlunderList: x,
	}
}

func (x *UserModuleProto_PlunderList) Unwrap() proto.Message {
	return x.PlunderList
}

func (x *UserHeroListProto) Wrap() isUserModuleProto_Module {
	return &UserModuleProto_HeroList{
		HeroList: x,
	}
}

func (x *UserModuleProto_HeroList) Unwrap() proto.Message {
	return x.HeroList
}

func (x *UserStorageProto) Wrap() isUserModuleProto_Module {
	return &UserModuleProto_Storage{
		Storage: x,
	}
}

func (x *UserModuleProto_Storage) Unwrap() proto.Message {
	return x.Storage
}

func (x *UserRechargeProto) Wrap() isUserModuleProto_Module {
	return &UserModuleProto_Recharge{
		Recharge: x,
	}
}

func (x *UserModuleProto_Recharge) Unwrap() proto.Message {
	return x.Recharge
}

func (x *UserRoomProto) Wrap() isUserModuleProto_Module {
	return &UserModuleProto_Room{
		Room: x,
	}
}

func (x *UserModuleProto_Room) Unwrap() proto.Message {
	return x.Room
}
