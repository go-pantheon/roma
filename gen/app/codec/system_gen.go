// Code generated by gen-api-client. DO NOT EDIT.

package codec

import (
	"strings"

	"github.com/go-pantheon/fabrica-util/errors"
	climsg "github.com/go-pantheon/roma/gen/api/client/message"
	cliseq "github.com/go-pantheon/roma/gen/api/client/sequence"
	"google.golang.org/protobuf/proto"
)

func UnmarshalCSSystem(seq int32, data []byte) (p proto.Message, err error) {
	switch cliseq.SystemSeq(seq) {
	// Heartbeat
	case cliseq.SystemSeq_Heartbeat:
		pp := &climsg.CSHeartbeat{}
		err = proto.Unmarshal(data, pp)
		p = pp

	default:
		return nil, errors.Errorf("Unmarshal CSSystem faild. seq not found. seq=%d", seq)
	}

	if err != nil {
		return nil, errors.Wrapf(err, "Unmarshal CSSystem faild. seq=%d", seq)
	}

	return p, nil
}

func UnmarshalSCSystem(seq int32, data []byte) (p proto.Message, err error) {
	switch cliseq.SystemSeq(seq) {
	// Heartbeat
	case cliseq.SystemSeq_Heartbeat:
		pp := &climsg.SCHeartbeat{}
		err = proto.Unmarshal(data, pp)
		p = pp
	// @push Server unexpected error
	case cliseq.SystemSeq_ServerUnexpectedErr:
		pp := &climsg.SCServerUnexpectedErr{}
		err = proto.Unmarshal(data, pp)
		p = pp
	// @push Server trigger logout
	case cliseq.SystemSeq_ServerLogout:
		pp := &climsg.SCServerLogout{}
		err = proto.Unmarshal(data, pp)
		p = pp
	default:
		return nil, errors.Errorf("Unmarshal SCSystem faild. seq not found. seq=%d", seq)
	}

	if err != nil {
		return nil, errors.Wrapf(err, "Unmarshal SCSystem faild. seq=%d", seq)
	}

	return p, nil
}

func IsPushSCSystem(seq int32) bool {
	name := cliseq.SystemSeq_name[seq]
	return strings.Index(name, "Push") == 0
}
