// Code generated by gen-api-client. DO NOT EDIT.

package codec

import (
	"github.com/go-pantheon/fabrica-util/errors"
	climod "github.com/go-pantheon/roma/gen/api/client/module"
	clipkt "github.com/go-pantheon/roma/gen/api/client/packet"
	"google.golang.org/protobuf/proto"
)

func UnmarshalCS(mod, seq int32, bytes []byte) (cs proto.Message, err error) {
	switch climod.ModuleID(mod) {
	case climod.ModuleID_Dev:
		return UnmarshalCSDev(seq, bytes)
	case climod.ModuleID_Hero:
		return UnmarshalCSHero(seq, bytes)
	case climod.ModuleID_Storage:
		return UnmarshalCSStorage(seq, bytes)
	case climod.ModuleID_System:
		return UnmarshalCSSystem(seq, bytes)
	case climod.ModuleID_User:
		return UnmarshalCSUser(seq, bytes)
	case climod.ModuleID_Room:
		return UnmarshalCSRoom(seq, bytes)
	default:
		return nil, errors.Errorf("module not found. mod=%d", mod)
	}
}

func UnmarshalSCPacket(p *clipkt.Packet) (sc proto.Message, err error) {
	if p == nil {
		return nil, errors.Errorf("packet is nil")
	}

	return UnmarshalSC(p.Mod, p.Seq, p.Data)
}

func UnmarshalSC(mod, seq int32, bytes []byte) (sc proto.Message, err error) {
	switch climod.ModuleID(mod) {
	case climod.ModuleID_Dev:
		return UnmarshalSCDev(seq, bytes)
	case climod.ModuleID_Hero:
		return UnmarshalSCHero(seq, bytes)
	case climod.ModuleID_Storage:
		return UnmarshalSCStorage(seq, bytes)
	case climod.ModuleID_System:
		return UnmarshalSCSystem(seq, bytes)
	case climod.ModuleID_User:
		return UnmarshalSCUser(seq, bytes)
	case climod.ModuleID_Room:
		return UnmarshalSCRoom(seq, bytes)
	default:
		return nil, errors.Errorf("mod not found. mod=%d", mod)
	}
}

func IsPushSC(mod climod.ModuleID, seq int32) bool {
	switch mod {
	case climod.ModuleID_Dev:
		return IsPushSCDev(seq)
	case climod.ModuleID_Hero:
		return IsPushSCHero(seq)
	case climod.ModuleID_Storage:
		return IsPushSCStorage(seq)
	case climod.ModuleID_System:
		return IsPushSCSystem(seq)
	case climod.ModuleID_User:
		return IsPushSCUser(seq)
	case climod.ModuleID_Room:
		return IsPushSCRoom(seq)
	default:
		return false
	}
}
