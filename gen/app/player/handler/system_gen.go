// Code generated by gen-api-client. DO NOT EDIT.

package handler

import (
	"context"

	"github.com/go-pantheon/fabrica-util/errors"
	climsg "github.com/go-pantheon/roma/gen/api/client/message"
	cliseq "github.com/go-pantheon/roma/gen/api/client/sequence"
	"github.com/go-pantheon/roma/gen/app/codec"
	"github.com/go-pantheon/roma/gen/app/player/service"
	"google.golang.org/protobuf/proto"
)

func handleSystem(ctx context.Context, s *service.PlayerServices, mod, seq int32, obj int64, in []byte) ([]byte, error) {
	cs, err := codec.UnmarshalCSSystem(seq, in)
	if err != nil {
		return nil, err
	}

	var (
		sc  proto.Message
	)
	switch cliseq.SystemSeq(seq) {

	// Heartbeat
	case cliseq.SystemSeq_Heartbeat:
		sc, err = s.System.Heartbeat(ctx, cs.(*climsg.CSHeartbeat))

	default:
		return nil, errors.Errorf("seq not found. mod=%s seq=%d", "System", seq)
	}

	out, err0 := NewPlayerResponse(mod, seq, obj, sc)
	if err0 != nil {
		return nil, errors.Wrapf(err0, "proto marshal failed. mod=%s seq=%d", "System", seq)
	}
	return out, err
}
