// Code generated by gen-api-client. DO NOT EDIT.

package handler

import (
	"context"

	"github.com/go-pantheon/fabrica-kit/xerrors"
	"github.com/go-pantheon/fabrica-util/errors"
	climsg "github.com/go-pantheon/roma/gen/api/client/message"
	cliseq "github.com/go-pantheon/roma/gen/api/client/sequence"
	"github.com/go-pantheon/roma/gen/app/codec"
	"github.com/go-pantheon/roma/gen/app/player/service"
	"google.golang.org/protobuf/proto"
)

func handleUser(ctx context.Context, s *service.PlayerServices, mod, seq int32, obj int64, in []byte) (proto.Message, error) {
	cs, err := codec.UnmarshalCSUser(seq, in)
	if err != nil {
		return nil, err
	}
	switch cliseq.UserSeq(seq) {
	// Login
	case cliseq.UserSeq_Login:
		return s.User.Login(ctx, cs.(*climsg.CSLogin))
	// Update name
	case cliseq.UserSeq_UpdateName:
		return s.User.UpdateName(ctx, cs.(*climsg.CSUpdateName))
	// Set gender
	case cliseq.UserSeq_SetGender:
		return s.User.SetGender(ctx, cs.(*climsg.CSSetGender))
	default:
		return nil, errors.WithMessagef(xerrors.ErrHandlerNotFound, "invalid seq. mod=%s seq=%d", "User", seq)
	}
}
