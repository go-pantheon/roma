// Code generated by gen-api-client. DO NOT EDIT.

package handler

import (
	"context"

	"github.com/go-pantheon/fabrica-util/errors"
	climsg "github.com/go-pantheon/roma/gen/api/client/message"
	cliseq "github.com/go-pantheon/roma/gen/api/client/sequence"
	"github.com/go-pantheon/roma/gen/app/codec"
	"github.com/go-pantheon/roma/gen/app/player/service"
	"google.golang.org/protobuf/proto"
)

func handleUser(ctx context.Context, s *service.PlayerServices, mod, seq int32, obj int64, in []byte) ([]byte, error) {
	cs, err := codec.UnmarshalCSUser(seq, in)
	if err != nil {
		return nil, err
	}

	var (
		sc  proto.Message
	)
	switch cliseq.UserSeq(seq) {

	// Login
	case cliseq.UserSeq_Login:
		sc, err = s.User.Login(ctx, cs.(*climsg.CSLogin))

	// Update name
	case cliseq.UserSeq_UpdateName:
		sc, err = s.User.UpdateName(ctx, cs.(*climsg.CSUpdateName))

	// Set gender
	case cliseq.UserSeq_SetGender:
		sc, err = s.User.SetGender(ctx, cs.(*climsg.CSSetGender))

	default:
		return nil, errors.Errorf("seq not found. mod=%s seq=%d", "User", seq)
	}

	out, err0 := NewPlayerResponse(mod, seq, obj, sc)
	if err0 != nil {
		return nil, errors.Wrapf(err0, "proto marshal failed. mod=%s seq=%d", "User", seq)
	}
	return out, err
}
