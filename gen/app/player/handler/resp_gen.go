// Code generated by gen-api-client. DO NOT EDIT.

package handler

import (
	"sync"

	"github.com/go-pantheon/fabrica-util/errors"
	intrav1 "github.com/go-pantheon/roma/gen/api/server/player/intra/v1"
	"google.golang.org/protobuf/proto"
)

// TakeProtoPlayerTunnelResponse takes a proto message from pool and must call PutPlayerResponseProto to put it back.
func TakeProtoPlayerTunnelResponse(index, mod, seq int32, Obj int64, in proto.Message) (ret *intrav1.TunnelResponse, err error) {
	data, err := proto.Marshal(in)
	if err != nil {
		return nil, errors.Wrapf(err, "proto marshal failed. mod=%d seq=%d obj=%d", mod, seq, Obj)
	}

	return TakeBytesPlayerTunnelResponse(index, mod, seq, Obj, data), nil
}

// TakeBytesPlayerTunnelResponse takes a proto message from pool and must call PutPlayerTunnelResponse to put it back.
func TakeBytesPlayerTunnelResponse(index, mod, seq int32, Obj int64, data []byte) (p *intrav1.TunnelResponse) {
	p = getPlayerTunnelResponse()

	p.Index = index
	p.Mod = mod
	p.Seq = seq
	p.Obj = Obj
	p.Data = data

	return p
}

func PutPlayerTunnelResponse(p *intrav1.TunnelResponse) {
	putPlayerTunnelResponse(p)
}

var playerTunnelResponsePool = sync.Pool{
	New: func() interface{} {
		return &intrav1.TunnelResponse{}
	},
}

func getPlayerTunnelResponse() *intrav1.TunnelResponse {
	return playerTunnelResponsePool.Get().(*intrav1.TunnelResponse)
}

func putPlayerTunnelResponse(p *intrav1.TunnelResponse) {
	if p == nil {
		return
	}

	p.Reset()
	playerTunnelResponsePool.Put(p)
}
