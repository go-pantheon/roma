// Code generated by gen-api-client. DO NOT EDIT.

package handler

import (
	"context"

	"github.com/go-pantheon/fabrica-kit/xerrors"
	"github.com/go-pantheon/fabrica-util/errors"
	climsg "github.com/go-pantheon/roma/gen/api/client/message"
	cliseq "github.com/go-pantheon/roma/gen/api/client/sequence"
	"github.com/go-pantheon/roma/gen/app/codec"
	"github.com/go-pantheon/roma/gen/app/room/service"
	"google.golang.org/protobuf/proto"
)

func handleRoom(ctx context.Context, s *service.RoomServices, mod, seq int32, obj int64, in []byte) (proto.Message, error) {
	cs, err := codec.UnmarshalCSRoom(seq, in)
	if err != nil {
		return nil, err
	}
	switch cliseq.RoomSeq(seq) {
	// Room list
	case cliseq.RoomSeq_RoomList:
		return s.Room.RoomList(ctx, cs.(*climsg.CSRoomList))
	// Room detail
	case cliseq.RoomSeq_RoomDetail:
		return s.Room.RoomDetail(ctx, cs.(*climsg.CSRoomDetail))
	// Create room
	case cliseq.RoomSeq_CreateRoom:
		return s.Room.CreateRoom(ctx, cs.(*climsg.CSCreateRoom))
	// Invite to join room
	case cliseq.RoomSeq_InviteToJoinRoom:
		return s.Room.InviteToJoinRoom(ctx, cs.(*climsg.CSInviteToJoinRoom))
	// Agree to invite to join room
	case cliseq.RoomSeq_AgreeToInviteJoinRoom:
		return s.Room.AgreeToInviteJoinRoom(ctx, cs.(*climsg.CSAgreeToInviteJoinRoom))
	// Request to join room
	case cliseq.RoomSeq_RequestToJoinRoom:
		return s.Room.RequestToJoinRoom(ctx, cs.(*climsg.CSRequestToJoinRoom))
	// Approve request to join room
	case cliseq.RoomSeq_ApproveRequestToJoinRoom:
		return s.Room.ApproveRequestToJoinRoom(ctx, cs.(*climsg.CSApproveRequestToJoinRoom))
	// Kick user from room
	case cliseq.RoomSeq_KickUserFromRoom:
		return s.Room.KickUserFromRoom(ctx, cs.(*climsg.CSKickUserFromRoom))
	// Close room
	case cliseq.RoomSeq_CloseRoom:
		return s.Room.CloseRoom(ctx, cs.(*climsg.CSCloseRoom))
	// Leave room
	case cliseq.RoomSeq_LeaveRoom:
		return s.Room.LeaveRoom(ctx, cs.(*climsg.CSLeaveRoom))
	default:
		return nil, errors.WithMessagef(xerrors.ErrHandlerNotFound, "invalid seq. mod=%s seq=%d", "Room", seq)
	}
}
