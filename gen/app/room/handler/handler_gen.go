// Code generated by gen-api-client. DO NOT EDIT.

package handler

import (
	"context"

	"github.com/go-pantheon/fabrica-kit/xerrors"
	"github.com/go-pantheon/fabrica-net/xnet"
	"github.com/go-pantheon/fabrica-util/errors"
	climod "github.com/go-pantheon/roma/gen/api/client/module"
	"github.com/go-pantheon/roma/gen/app/room/service"
	"google.golang.org/protobuf/proto"
)

func RoomHandle(ctx context.Context, s *service.RoomServices, in xnet.TunnelMessage) (xnet.TunnelMessage, error) {
	var (
		sc  proto.Message
		err error
	)

	switch climod.ModuleID(in.GetMod()) {
	case climod.ModuleID_Room:
		sc, err = handleRoom(ctx, s, in.GetMod(), in.GetSeq(), in.GetObj(), in.GetData())
	default:
		return nil, errors.WithMessagef(xerrors.ErrHandlerNotFound, "invalid mod. mod=%d", in.GetMod())
	}

	if err != nil {
		return nil, err
	}

	return TakeProtoRoomTunnelResponse(in.GetMod(), in.GetSeq(), in.GetObj(), sc)
}
