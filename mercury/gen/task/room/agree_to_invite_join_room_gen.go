// Code generated by gen-mercury. DO NOT EDIT.

package room

import (
	"github.com/go-pantheon/roma/gen/api/client/message"
	"github.com/go-pantheon/roma/gen/api/client/module"
	"github.com/go-pantheon/roma/gen/api/client/sequence"
	"github.com/go-pantheon/roma/mercury/internal/task"
	"reflect"
)

var _ task.Taskable = (*AgreeToInviteJoinRoomTask)(nil)

// AgreeToInviteJoinRoomTask Agree to invite to join room
type AgreeToInviteJoinRoomTask struct {
	*task.CommonTask
}

func NewAgreeToInviteJoinRoomTask(cs *climsg.CSAgreeToInviteJoinRoom, assert task.AssertFunc) *AgreeToInviteJoinRoomTask {
	common := task.NewCommonTask(
		task.TypeCommon,
		climod.ModuleID_Room,
		int32(cliseq.RoomSeq_AgreeToInviteJoinRoom),
		reflect.TypeOf(climsg.SCAgreeToInviteJoinRoom{}),
		cs,
		assert,
	)
	o := &AgreeToInviteJoinRoomTask{
		CommonTask: common,
	}
	return o
}
